---
layout: post
title:      "Candy Shop Assessment using Rails and JavaScript"
date:       2019-02-07 21:54:12 +0000
permalink:  candy_shop_assessment_using_rails_and_javascript
---


This was an interesting assignment. Take my working Rails app from the previous final project, break it, and re-write the front end using JavaScript. I must admit that it was more difficult than I had anticipated. I've been so used to writing code in only one laguage at a time, so switching between two languages in the same application felt very unnatural to me. That said, I dove right in. I began by creating serializers for all of my models. Then I needed to fetch my objects and their attributes using AJAX get requests and rendering the response through an Active Model Serialization JSON backend. We use JSON because that format transfers more data using less space which leads to faster processing times. I created JavaScript functions in each of the different views to complete the above tasks. I also had to change my controllers a bit, so I could format the responses into HTML. I wanted a HTML user interface (UI) because it's much easier to interact with than JSON. Next I created a comments model object using Active Record and built out some views for that. I wanted users to be able to create comments for each candy. These comments would be appended to each candy view page. I found this the most challenging. It took me awhile to figure out the correct syntax to append my comments, and to do it without a page refresh. In addition, I added a "next" link to a few of my views, again using AJAX and JSON, and gave users the ability to view all candies by clicking the link. This application is a lot more functional, than when it was just a rails application. Users now have the ability to click through purchases, and comments, see candies and all candy comments, and post their own comments about each candy. I suppose there's actually much more I could do with this app, like search for specific candies, users, or maybe even comments, but for the sake of getting through this course, I stopped here.
